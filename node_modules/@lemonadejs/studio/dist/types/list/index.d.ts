/**
 * Official Type definitions for the LemonadeJS plugins
 * https://lemonadejs.net
 * Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
 */

declare function List(el: HTMLElement, options?: List.Options): List.Instance;

declare namespace List {

    interface Item {
        [key: string]: any;
    }

    interface Options {
        /** The data that will be displayed on the grid based on the columns attribute. */
        data: Item[];
        /** Enable the pagination and define the number of items per page. */
        pagination?: number;
        /** Enable the search. Default: false */
        search?: boolean;
        /** Called when a search happens. */
        onsearch?: (self: object) => void
        /** Called when the user changes the page. */
        onchangepage?: (self: object) => void
    }

    interface Instance {
        /** Array<Object>	Change the state of data. */
        data: Item[];
        /**  Number	Change the page index. */
        page: number;
        /**  Number	Enable pagination. */
        pagination: number;
        /** Boolean	Enable search. */
        search: boolean;
        /** Filter the content based on the text. */
        input: string;
    }
}

export default List;