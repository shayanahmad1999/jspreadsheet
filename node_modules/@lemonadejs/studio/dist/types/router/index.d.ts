/**
 * Official Type definitions for LemonadeJS plugins
 * https://lemonadejs.net
 * Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
 */

declare function Router(el: HTMLElement, options?: Router.Options): Router.Instance;

declare namespace Router {
    interface Page {
        /** Url for this page */
        path?: string;
        /** LemonadeJS Component */
        controller?: Function;
        /** Element */
        element?: HTMLDivElement;
        /** Preload this page during the onload of the component */
        preload?: boolean;
        /** View pathname. Load the HTML from an external file */
        view?: string;
        /** On enter this page */
        onenter?: (newPage: Page, oldPage: Page) => void;
        /** On leave this page */
        onleave?: (oldPage: Page, newPage: Page) => void;
    }

    interface Options {
        /**
         * @param newPage - new page
         * @param oldPage - previous page
         * @param isNewPage - first time loading this page
         */
        onchangepage?: (newPage: Page, oldPage: Page, isNewPage: boolean) => void;
        /** On before change page */
        onbeforechangepage?: (path: string, newPage?: Page) => void | boolean;
        /** Before creating a new page */
        onbeforecreatepage?: (newPage: Page, template: string) => void | boolean;
        /** A single page on DOM */
        single?: boolean;
        /** Config */
        config?: Page[];
    }

    interface Instance {
        /**
         * Change page
         * @param url - pathname to a new page
         * @param ignore - do not add this page on the navigation history
         */
        setPath: (url: string, ignore?: boolean) => void;
        /** Current page */
        current: Page;
    }
}

export default Router;
