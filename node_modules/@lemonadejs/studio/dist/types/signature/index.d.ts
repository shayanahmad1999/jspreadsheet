/**
 * Official Type definitions for the JavaScript signature pad
 * https://lemonadejs.net
 * Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
 */

declare function Signature(el: HTMLElement, options?: Signature.Options): Signature.Instance;

declare namespace Signature {
    interface Options {
        /** Identification name */
        name?: string;
        /** Thickness of the line */
        line?: number;
        /** Value will hold the current signature image */
        value?: number[][];
        /** Container width */
        width: number;
        /** Container height */
        height: number;
        /** Signature instructions */
        instructions?: string
        /** Onchange event */
        onchange?: (instance: object) => void;
        /** Onload event */
        onload?: (instance: object) => void;
    }

    interface Instance {
        /** Identification name */
        name?: string;
        /** Thickness of the line */
        line?: number;
        /** Value will hold the current signature image */
        value?: number[][];
        /** Container width */
        width?: number;
        /** Get the current value */
        getValue: () => number[][];
        /** Set the current value */
        setValue: (value: number[]) => void;
        /** Get the signature as an image */
        getImage: () => string;
    }
}

export default Signature;